@using Loquit.Services.DTOs.ChatTypesDTOs;
@using Loquit.Services.DTOs.MessageTypesDTOs;
@using Loquit.Services.DTOs.AbstracionsDTOs;
@using Loquit.Data.Entities;
@using Loquit.Web.Models;
@using Microsoft.AspNetCore.Identity;


@model CurrentChatViewModel;

@{
    string? previousSenderId = null;
    int consecutiveMessageCount = 0;
    DateTime lastMessageTime = DateTime.MinValue;
    const int messageThreshold = 5;
}

@foreach (var item in Model.CurrentChat.Messages)
{
    bool isCurrentUser = (item.SenderUserId == Model.CurrentUser.Id);
    var messageClass = isCurrentUser ? "current-user" : "other-user";

    bool showProfilePicture = false;
    if (previousSenderId == item.SenderUserId)
    {
        consecutiveMessageCount++;

        if (DateTime.Now - lastMessageTime <= TimeSpan.FromMinutes(10))
        {
            if (consecutiveMessageCount >= messageThreshold)
            {
                showProfilePicture = true;
                consecutiveMessageCount = 0;
            }
        }
    }
    else
    {
        consecutiveMessageCount = 1;
        showProfilePicture = true;
    }
    lastMessageTime = DateTime.Now;
    previousSenderId = item.SenderUserId;

    <div class="message-container @messageClass d-flex">

        <div class="pfp pfp-small @(!showProfilePicture ? ".hidden" : "") d-flex justify-content-start">
            @if (showProfilePicture)
            {
                <img src="~/uploads/@item.SenderUser.ProfilePictureUrl" loading="lazy" />
            }
        </div>
        
        @if (item is TextMessageDTO)
        {
            var textMessage = (TextMessageDTO)item;
            <partial name="_TextMessagePartial" model="textMessage" />
        }
        else if (item is ImageMessageDTO)
        {
            var imageMessage = (ImageMessageDTO)item;
            <partial name="_ImageMessagePartial" model="imageMessage" />
        }
    </div>
}
